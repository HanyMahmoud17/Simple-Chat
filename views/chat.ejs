<%- include('parts/header') %>
<%- include('parts/navbar') %>
<style>
  .user {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 20px;
}

.user img {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  object-fit: cover;
  margin-bottom: 10px;
}

.user a {
  font-size: 24px;
  font-weight: bold;
  text-align: center;
  color: #333;
  text-decoration: none;
}
    p {
        margin: 0;
    }

    .message-container {
        width: 95%;
        height: calc(100vh - 200px); /* subtract the height of the header, navbar, and chat-footer */
        overflow-y: scroll;
        overflow-x: hidden;
    }

    .message-container::-webkit-scrollbar {
        display: none;
    }

    .message {
        height: auto;
        padding: 15px;
        display: flex;
    }

    .message .message-content {
        width: auto;
        height: auto;
        min-height: 40px;
        max-width: 120px;
        background-color: #43a047;
        border-radius: 5px;
        color: white;
        display: flex;
        align-items: center;
        margin-right: 5px;
        margin-left: 5px;
        padding-right: 5px;
        padding-left: 5px;
        overflow-wrap: break-word;
        word-break: break-word;
    }

    #you {
        justify-content: flex-end;
    }

    #you .message-content {
        justify-content: flex-end;
    }

    #you .message-meta {
        justify-content: flex-end;
        margin-left: 5px;
    }

    #other {
        justify-content: flex-start;
    }

    #other .message-content {
        justify-content: flex-start;
        background-color: cornflowerblue;
    }

    #other .message-meta {
        justify-content: flex-start;
        margin-right: 5px;
    }

    .message-meta #author {
        margin-left: 10px;
        font-weight: bold;
    }

    .message .message-meta {
        display: flex;
        font-size: 12px;
    }

    .chat-footer {
        position: fixed; /* make the chat-footer fixed at the bottom of the page */
        bottom: 0;
        /* right: 0; */
        width: 65%;
        max-width: 65%;
        /* min-width: 65%; */
        height: 40px;
        border: 1px solid #263238;
        border-top: none;
        display: flex;
    }

    .chat-footer input {
        /* width: 100%; */
        height: 100%;
        flex: 85%;
        border: 0;
        padding: 0 0.7em;
        font-size: 1em;
        border-right: 1px dotted #607d8b;
        outline: none;
    }

    .chat-footer button {
        border: 0;
        display: grid;
        place-items: center;
        cursor: pointer;
        flex: 15%;
        height: 100%;
        background: transparent;
        outline: none;
        font-size: 25px;
        color: white;
        background-color: #43a047;
        transition: all 0.5s ease-in-out;
        border: 1px solid #43a047;
    }

    .chat-footer button:hover {
        color: #43a047;
        background-color: white;
        border: 1px solid #43a047;
    }

    .hide {
        opacity: 0 !important;
    }
    .chat-body{
        background-color: aliceblue;
        /* border: 1px solid 263238; */
        border-right: 1px solid #607d8b;
        border-left: 1px solid #607d8b;
        
    }
    
</style>

<div class="container test">
    <div class="row">
        <input type="hidden" value="<%= chatId %>" id="chatId">
        <div class="col col-12 col-lg-3 user">
            <img src="/<%= friendData.image %>" alt="">
            <br>
            <a href="/profile/<%= friendData.id %>">
                <%= friendData.username %>
            </a>
        </div>

        <div class="col col-12 col-md-9 messages chat-body">
            <div id="messages-container" class="message-container">
                <% for(let message of messages) { %>
                <div class="message" id="<% if (message.sender === isUser) { %>you<% } else { %>other<% } %>">
                    <div class="message-content">
                        <span>
                            <%= message.content %>
                        </span>
                    </div>
                    <div class="message-meta">
                        <p id="author">
                            <% if (message.sender===isUser) { %>
                            <%= myName %>
                            <% } else { %>
                            <%= friendData.username %>
                            <% } %>
                        </p>
                        <p id="time" style="padding-left: 10px;">
                            <%= new Date(message.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', second:'2-digit'}) %>
                        </p>
                    </div>
                </div>
                <% } %>
            </div>
            <div class="message-form chat-footer">
                <input id="message" placeholder="Enter message ..." type="text">
                <button id="sendMsg">Send</button>
            </div>
        </div>
    </div>
</div>

<%- include('parts/scripts') %>
<script src="/socket.io/socket.io.js"></script>
<script src="/js/sockets/init.js"></script>
<script src="/js/sockets/chat.js"></script>
<script>
    const messageContainer = document.getElementById('messages-container');
    const chatForm = document.querySelector('.message-form');
    const existingMessage = document.querySelector(`.message-content span:not(.meta)[data-message="${message.content}"]`);

    // Append a new message to the messages container
// // Append a new message to the messages container
const appendMessage = (message) => {
  const messageElement = document.createElement('div');
  messageElement.classList.add('message');
  if (message.sender === '<%= isUser %>') {
    messageElement.setAttribute('id', 'you');
  } else {
    messageElement.setAttribute('id', 'other');
  }
  const name = message.sender === '<%= isUser %>' ? '<%= myName %>' : '<%= friendData.username %>';
  messageElement.innerHTML = `
    <div class="message-content">
      <span>${message.content}</span>
    </div>
    <div class="message-meta">
      <p class="author">${name}</p>
      <p id="time" style="padding-left: 10px;">${new Date(message.timestamp).toLocaleString('en-US', { hour12: true, hour: 'numeric', minute: 'numeric' })}</p>
    </div>
  `;
  if (messageContainer.lastChild) {
    messageContainer.removeChild(messageContainer.lastChild);
  }
  messageContainer.appendChild(messageElement);
  messageContainer.scrollTop = messageContainer.scrollHeight;
};
    // Send a message to the server when the form is submitted
    chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const messageInput = document.getElementById('message');
        const message = messageInput.value.trim();
        if (message !== '') {
            const chatId = document.getElementById('chatId').value;
            socket.emit('sendMessage', { chatId, message });
            messageInput.value = '';
        }
    });

    socket.on('newMessage', (message) => {
    // Check if the message has already been displayed in the message container
    const existingMessage = document.querySelector(`.message-content span:not(.meta)[data-message="${message.content}"]`);
    if (!existingMessage) {
        appendMessage(message);
    }
});

    // Scroll to the bottom of the messages container when the page loads
    window.onload = () => {
        messageContainer.scrollTop = messageContainer.scrollHeight;
    };
</script>
</body>

</html>